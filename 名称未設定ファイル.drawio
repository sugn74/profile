<mxfile host="app.diagrams.net" modified="2022-04-08T07:06:31.534Z" agent="5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36" etag="8JbWqE5aIpz1nWErHGur" version="17.4.0" type="github">
  <diagram id="wNjajI2MCHbM71Gs-DAX" name="ページ1">
    <mxGraphModel dx="1087" dy="680" grid="1" gridSize="39.37" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="RUVW1VNI79D-d2WEvtp2-1" value="&lt;div&gt;&lt;div&gt;Linux でトラックポイントまわりの挙動を細かく設定したい&lt;/div&gt;&lt;div&gt;https://xr0038.hatenadiary.jp/entry/2015/03/09/072354&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;目的&lt;/div&gt;&lt;div&gt;Ubuntu 14.04 に ThinkPad の bluetooth キーボードを接続して使用している．トラックポイント + 中ボタンでマウスホイール操作によるスクロールをしようとするときに，トラックポイントでカーソルを動かすタイミングによってはミドルクリックのペーストが先に認識されてしまうことが度々ある．トラックポイントに関係する細かいプロパティを設定することで，ミドルクリックペーストが暴発しないようにしたい．&lt;/div&gt;&lt;/div&gt;" style="text;html=1;strokeColor=default;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry width="472.44" height="157.48" as="geometry" />
        </mxCell>
        <mxCell id="25LW0VAzEqJ-nKai1Upx-1" value="&lt;div&gt;シリアル通信でArduinoからProcessingに情報を渡す&lt;/div&gt;&lt;div&gt;https://tsukutta.hatenablog.com/entry/2013/06/27/190219&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Processingのコードを以下に示すがコードを実行する前にいくつかやっておくことがある。まずArduinoとPCをUSB端子で接続すること。次にProcessingに以下のコマンドを入力することだ。&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;println(Serial.list());&lt;/div&gt;&lt;div&gt;これを実行すると下のような文字が出てくる。このなかでArduinoで設定したシリアルポートと同じものを探し番号を覚えておく。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;いよいよコードを書く。それほど多くない。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//Original :04 シリアル通信でProcessingと連携(Processing)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;import processing.serial.*;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Serial port;&amp;nbsp;&lt;/div&gt;&lt;div&gt;int inByte;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void setup(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; println(Serial.list());&lt;/div&gt;&lt;div&gt;&amp;nbsp; String arduinoPort = Serial.list()[4];&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // printlnで表示された番号を4の代わりに入れる&lt;/div&gt;&lt;div&gt;&amp;nbsp; port = new Serial(this, arduinoPort, 9600);&amp;nbsp; // Arduino&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void draw(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; delay(100);&lt;/div&gt;&lt;div&gt;&amp;nbsp; background(0);&amp;nbsp; // 背景を黒に。&lt;/div&gt;&lt;div&gt;&amp;nbsp; text(inByte,50,50); //テキスト（変数inByteの値）を50,50の位置に表示&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void serialEvent(Serial p){&lt;/div&gt;&lt;div&gt;&amp;nbsp; delay(10);&lt;/div&gt;&lt;div&gt;&amp;nbsp; inByte=port.read();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="text;html=1;strokeColor=default;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry y="196.85" width="629.92" height="433.07" as="geometry" />
        </mxCell>
        <mxCell id="xX8cJ3ERn-WcbGZl_4lk-1" value="&lt;div&gt;Illustratorはもういらない！？ブラウザ上でイラスト編集ができるオンラインサービス6選&lt;/div&gt;&lt;div&gt;https://www.linustock.com/article/recommends/createvectors&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;BOXY SVG はグリッドの設定ができない&lt;/div&gt;&lt;div&gt;保存出力にログインが必要&lt;/div&gt;" style="text;html=1;strokeColor=default;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry y="669.29" width="472.44" height="118.11" as="geometry" />
        </mxCell>
        <mxCell id="f5EtCbAzlyeyAya_sc4U-1" value="&lt;div&gt;;kindleトリミングマシーン&lt;/div&gt;&lt;div&gt;;&lt;span&gt;	&lt;/span&gt;とりあえずGUIが動く版&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;;include &quot;..\..\hinahina.au3&quot;&lt;/div&gt;&lt;div&gt;#include &amp;lt;ButtonConstants.au3&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;GUIConstantsEx.au3&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;StaticConstants.au3&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;WindowsConstants.au3&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;GDIPlus.au3&amp;gt;&lt;/div&gt;&lt;div&gt;#Include &amp;lt;WinAPI.au3&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;GUIConstantsEx.au3&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;#Region ### START Koda GUI section ### Form=C:\Users\600G5-10\Documents\auto\tri\gui01\Form1.kxf&lt;/div&gt;&lt;div&gt;$Form1 = GUICreate(&quot;Form1&quot;, 619, 520, 300, 186)&lt;/div&gt;&lt;div&gt;GUISetFont(9, 400, 0, &quot;ＭＳ Ｐゴシック&quot;)&lt;/div&gt;&lt;div&gt;GUISetBkColor(0xABABAB)&lt;/div&gt;&lt;div&gt;$Pic1 = GUICtrlCreatePic(&quot;&quot;, 88, 248, 441, 249)&lt;/div&gt;&lt;div&gt;$Pic2 = GUICtrlCreatePic(&quot;&quot;, 56, 8, 209, 209)&lt;/div&gt;&lt;div&gt;$Pic3 = GUICtrlCreatePic(&quot;&quot;, 344, 8, 209, 209)&lt;/div&gt;&lt;div&gt;$Label1 = GUICtrlCreateLabel(&quot;Label1&quot;, 48, 224, 165, 16)&lt;/div&gt;&lt;div&gt;$Label2 = GUICtrlCreateLabel(&quot;Label2&quot;, 368, 224, 165, 16)&lt;/div&gt;&lt;div&gt;$Button1 = GUICtrlCreateButton(&quot;左上&quot;, 272, 176, 67, 65)&lt;/div&gt;&lt;div&gt;$Button2 = GUICtrlCreateButton(&quot;色&quot;, 272, 120, 65, 49)&lt;/div&gt;&lt;div&gt;GUISetState(@SW_SHOW)&lt;/div&gt;&lt;div&gt;#EndRegion ### END Koda GUI section ###&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;$pngFname = FileOpenDialog(&quot;openPNG&quot;, @AppDataDir &amp;amp; &quot;&quot;, &quot;PNG (*.PNG)&quot; )&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;; PNG画像をロード&lt;/div&gt;&lt;div&gt;_GDIPlus_StartUp()&lt;/div&gt;&lt;div&gt;;$hImage&amp;nbsp; &amp;nbsp;= _GDIPlus_ImageLoadFromFile(&quot;C:\Users\600G5-10\Desktop\test.PNG&quot;)&lt;/div&gt;&lt;div&gt;$hImage&amp;nbsp; &amp;nbsp;= _GDIPlus_ImageLoadFromFile($pngFname )&lt;/div&gt;&lt;div&gt;$imgW = _GDIPlus_ImageGetWidth ( $hImage )&lt;/div&gt;&lt;div&gt;$imgH = _GDIPlus_ImageGetHeight ( $hImage )&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;;$hGraphic = _GDIPlus_GraphicsCreateFromHWND($Form1)&lt;/div&gt;&lt;div&gt;$hPic1 = _GDIPlus_GraphicsCreateFromHWND(GUICtrlGetHandle($Pic1))&lt;/div&gt;&lt;div&gt;$hPic2 = _GDIPlus_GraphicsCreateFromHWND(GUICtrlGetHandle($Pic2))&lt;/div&gt;&lt;div&gt;$hPic3 = _GDIPlus_GraphicsCreateFromHWND(GUICtrlGetHandle($Pic3))&lt;/div&gt;&lt;div&gt;;_GDIPlus_GraphicsDrawImage($hGraphic, $hImage, 0, 0)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;_GDIPlus_GraphicsDrawImageRectRect($hPic1, $hImage, 0, 0,$imgW,$imgH, 0,0,441,249)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;$point1X = 0&lt;/div&gt;&lt;div&gt;$point1Y = 0&lt;/div&gt;&lt;div&gt;$point2X = 0&lt;/div&gt;&lt;div&gt;$point2Y = 0&lt;/div&gt;&lt;div&gt;$nowPoint = 0&lt;span&gt;		&lt;/span&gt;;描画対象&lt;/div&gt;&lt;div&gt;$penColor = 0xFF0000FF&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const $zoomSize = 209&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;While 1&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;$nMsg = GUIGetMsg()&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;Switch $nMsg&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $GUI_EVENT_CLOSE&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;; リソースをクリーン&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;_GDIPlus_GraphicsDispose($hPic1)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;_GDIPlus_GraphicsDispose($hPic2)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;_GDIPlus_GraphicsDispose($hPic3)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;_GDIPlus_ImageDispose($hImage)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;_GDIPlus_ShutDown()&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;Exit&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Form1&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Pic1&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$a = GUIGetCursorInfo()&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$mouseX = $a[0] - 88&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$mouseY = $a[1] - 248&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;if $nowPoint=0 then&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$point1X = int(($imgW / 441) * $mouseX)&lt;span&gt;	&lt;/span&gt;;int()で丸めておかないと、ドットの真ん中にカーソルが来ない&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$point1Y = int(($imgH / 249) * $mouseY)&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;drawZoomWin()&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;;_GDIPlus_GraphicsDrawImageRectRect($hPic2, $hImage, $point1X, $point1Y, 20 ,20, 0,0,$zoomSize,$zoomSize)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;endif&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;if $nowPoint=1 then&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$point2X = int(($imgW / 441) * $mouseX)&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$point2Y = int(($imgH / 249) * $mouseY)&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;drawZoomWin()&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;;_GDIPlus_GraphicsDrawImageRectRect($hPic3, $hImage, $point2X, $point2Y, 20 ,20, 0,0,$zoomSize,$zoomSize)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;endif&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Pic2&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$a = GUIGetCursorInfo()&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$mouseX = $a[0] - 56&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$mouseY = $a[1] - 8&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$point1X = $point1X + int(($mouseX - $zoomSize/2) /16)&lt;span&gt;		&lt;/span&gt;;微細移動X 中心からの距離で変わる&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$point1Y = $point1Y + int(($mouseY - $zoomSize/2) /16)&lt;span&gt;		&lt;/span&gt;;微細移動Y&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;drawZoomWin()&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;GUICtrlSetData($Label1,&quot;point1 &quot; &amp;amp; $point1X + 20/2 &amp;amp;&quot;:&quot;&amp;amp; $point1Y + 20/2)&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Pic3&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$a = GUIGetCursorInfo()&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$mouseX = $a[0] - 344&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$mouseY = $a[1] - 8&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$point2X = $point2X + int(($mouseX - $zoomSize/2) /16)&lt;span&gt;		&lt;/span&gt;;微細移動X 中心からの距離で変わる&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;$point2Y = $point2Y + int(($mouseY - $zoomSize/2) /16)&lt;span&gt;		&lt;/span&gt;;微細移動Y&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;drawZoomWin()&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;GUICtrlSetData($Label2,&quot;point2 &quot; &amp;amp; $point2X + 20/2 &amp;amp;&quot;:&quot;&amp;amp; $point2Y + 20/2)&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Button1&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;if $nowPoint = 0 then&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$nowPoint = 1&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;GUICtrlSetData($Button1,&quot;右下&quot;)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;else&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$nowPoint = 0&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;GUICtrlSetData($Button1,&quot;左上&quot;)&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;endif&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Button2&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;;ペン色変更&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;if $penColor = 0xFF0000FF then&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$penColor = 0xFFFF0000&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;elseif $penColor = 0xFFFF0000 then&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$penColor = 0xFF00FF00&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;elseif $penColor = 0xFF00FF00 then&lt;/div&gt;&lt;div&gt;&lt;span&gt;				&lt;/span&gt;$penColor = 0xFF0000FF&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;endif&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;drawZoomWin()&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Label1&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;Case $Label2&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;EndSwitch&lt;/div&gt;&lt;div&gt;WEnd&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;func drawZoomWin()&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;_GDIPlus_GraphicsDrawImageRectRect($hPic2, $hImage, $point1X, $point1Y, 20 ,20, 0,0,$zoomSize,$zoomSize)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;$hPen = _GDIPlus_PenCreate($penColor, 2)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;_GDIPlus_GraphicsDrawLine($hPic2, $zoomSize/2, 0, $zoomSize/2, $zoomSize, $hPen)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;_GDIPlus_GraphicsDrawLine($hPic2, 0, $zoomSize/2, $zoomSize, $zoomSize/2, $hPen)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;_GDIPlus_GraphicsDrawImageRectRect($hPic3, $hImage, $point2X, $point2Y, 20 ,20, 0,0,$zoomSize,$zoomSize)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;_GDIPlus_GraphicsDrawLine($hPic3, $zoomSize/2, 0, $zoomSize/2, $zoomSize, $hPen)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;_GDIPlus_GraphicsDrawLine($hPic3, 0, $zoomSize/2, $zoomSize, $zoomSize/2, $hPen)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;_GDIPlus_PenDispose($hPen)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;endfunc&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=default;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry y="826.77" width="708.66" height="1614.17" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
